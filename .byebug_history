c
routes.first.services.first
routes.first.services
routes[0].services.first
routes[0].services.take
routes[0].services
routes[0].service
routes
c
routes[0]
routes[0].service
routes[0].services.first
routes[0].services.take
routes[0].services
routes[0]
routes
routes.take.services
routes.take.services.all
routes.take.services.take
routes.take.services.first
routes.take.services.take
routes.take.services
routes.take!
qwe.service
qwe.services
qwe = routes.all
routes.all
routes.services
routes.service
routes
c
routescc
routes.take
routes
c
routes.take
routes.take!
routes.take
routes.services.take
routes.services
routes.service
routes.take
routes.services
routes
c
routesc
routes.services.count
.count
routes.services
routes.service
routes
c
routes.services
routes.services.count
routes.services
routes
routes.services
routes.service
routes.services
routes.services.take
routes.services
routes
c
routes
c
od["date_dep"]
Route.fetch_by_ond_and_dates(od["dep"], od["arr"], od["date_dep"])
Route.fetch_by_ond_and_dates(od["dep"], od["arr"], od["date_dep"]).take!
Route.fetch_by_ond_and_dates(od["dep"], od["arr"], od["date_dep"])
routes
c
routes
date_dep
c
date_dep
c
date_dep
c
date_dep
c
date_dep
c
date_dep
c
od["date_dep"]
routes.take
routes
c
routes
routes.take
routes.take!
.take
routes
route
c
routes.take
routes
c
REDIS
c
Redis.current
redis
c
ReadCache.redis
API.redis.ping
API.redis
@redis
redis
c
@redis.all
@redis
c
$redis.all
$redis
c
$redis
c
$redis.all
$redis
redis
@redis
c
@redis
redis
c
redis
@rediss
@redis
redis
rediw
c
@redis
redis
c
@redis
redis
c
$redis
c
n
routes
routes.take!
routes.take
routes
c
qwe = Route.fetch_by_ond_and_dates(od["dep"], od["arr"], od["date_dep"]).take!
qwe = Route.fetch_by_ond_and_dates(od["dep"], od["arr"], od["date_dep"]).take
Route.fetch_by_ond_and_dates(od["dep"], od["arr"], od["date_dep"]).take
Route.fetch_by_ond_and_dates(od["dep"], od["arr"], od["date_dep"]).all
Route.fetch_by_ond_and_dates(od["dep"], od["arr"], od["date_dep"])
routes.services
routes.service
routes
continue
s
ss
s
step
JSON.parse(get_request(response_id))
response_id
c
continue
step
red = Redis.new.ping
