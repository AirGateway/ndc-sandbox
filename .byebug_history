c
routes.take
routes
c
REDIS
c
Redis.current
redis
c
ReadCache.redis
API.redis.ping
API.redis
@redis
redis
c
@redis.all
@redis
c
$redis.all
$redis
c
$redis
c
$redis.all
$redis
redis
@redis
c
@redis
redis
c
redis
@rediss
@redis
redis
rediw
c
@redis
redis
c
@redis
redis
c
$redis
c
n
routes
routes.take!
routes.take
routes
c
qwe = Route.fetch_by_ond_and_dates(od["dep"], od["arr"], od["date_dep"]).take!
qwe = Route.fetch_by_ond_and_dates(od["dep"], od["arr"], od["date_dep"]).take
Route.fetch_by_ond_and_dates(od["dep"], od["arr"], od["date_dep"]).take
Route.fetch_by_ond_and_dates(od["dep"], od["arr"], od["date_dep"]).all
Route.fetch_by_ond_and_dates(od["dep"], od["arr"], od["date_dep"])
routes.services
routes.service
routes
continue
s
ss
s
step
JSON.parse(get_request(response_id))
response_id
c
continue
step
red = Redis.new.ping
